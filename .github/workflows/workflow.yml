name: CI/CD
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  phpstan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v5

      - name: PHPStan Static Analysis
        uses: php-actions/phpstan@v3
        with:
          path: app/

      - name: The job has succeeded
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: The ${{ github.event_name }} event triggered first step.

  test:
    needs: phpstan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v5
      - name: PHPUnit Tests
        uses: php-actions/phpunit@v2
        with:
          bootstrap: vendor/autoload.php
          configuration: test/phpunit.xml
          args: --coverage-text
      - name: The job has succeeded
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: Application test OK.

  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Login to Heroku Container registry
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #       run: heroku container:login

  #     - name: Build and push
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #       run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

  #     - name: Release
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #       run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
